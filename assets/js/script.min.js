$(document).ready(function () {
  AOS.init({
    disable: "mobile",
  });
  c = document.querySelectorAll(".carousel");
  c.forEach((element) => {
    element.setAttribute("data-interval", "false");
  });
  $(".carousel").carousel("pause");
});

var firebaseConfig = {
  apiKey: "AIzaSyDmnvgNUMI7TGiTqsRy2YYpG9DOmEF39Zs",
  authDomain: "practice-713ca.firebaseapp.com",
  databaseURL: "https://practice-713ca.firebaseio.com",
  projectId: "practice-713ca",
  storageBucket: "practice-713ca.appspot.com",
  messagingSenderId: "192057578935",
  appId: "1:192057578935:web:7e77f7cf51fb93f3360432",
  measurementId: "G-X2JVWNL1VN",
};
// Initialize Firebase
firebase.initializeApp(firebaseConfig);

var books = firebase.database().ref("books");
// -------------------------------------------------------------------------------------- //

let myLibrary = [];
// todo add contributors
let contributors = new Set();
// todo add single select
genre = [
  "Fiction",
  "NonFiction",
  "Mystery",
  "Self Help",
  "Biography",
  "Fantasy",
  "Manga",
  "Comedy",
  "Philosophy",
  "Poetry",
  "Spirituality",
];

function newcard(title, author, pages, read) {
  this.title = title;
  this.author = author;
  this.pages = pages;
  this.read = read;
}

// listens for submit
document.getElementById("bookForm").addEventListener("submit", submitForm);
// listens for change in database
books.on("child_added", (snap) => {
  setContent(snap.val(), snap.key);
  contributors.add(snap.val().read);
});

books.on("child_removed", (snap) => {
  let uniqueID = snap.key;
  document.getElementById(uniqueID).remove();
});

//functioning

function setContent(book, id) {
  let carousel = document.createElement("div");
  carousel.className = "carousel-item";

  let card = document.createElement("div");
  card.className = "card";
  card.id = id;

  let body = document.createElement("div");
  body.className = "card-body";

  let cardTitle = document.createElement("h4");
  cardTitle.className = "card-title";
  cardTitle.innerHTML = `<p style="font-family:'Lobster'">${book.title}</p>`;

  let cardSub = document.createElement("h6");
  cardSub.className = "text-muted card-subtitle mb-2";
  cardSub.innerHTML = `<p style="font-family:Pacifico">${book.author}</p>`;

  let cardText = document.createElement("p");
  cardText.className = "card-text";
  cardText.classList.toggle("grid");

  let image = document.createElement("img");
  let ref = document.createElement("a");

  ref.innerHTML = "Read More";
  ref.classList.toggle("btn");
  ref.classList.toggle("btn-info");
  ref.setAttribute("style", "max-width:max-content");
  image.setAttribute("style", "max-width:100; margin: auto auto");

  $.get(
    "https://www.googleapis.com/books/v1/volumes?q=" + book.title.toLowerCase(),
    function (response) {
      console.log(cardText.offsetWidth)
      if (response.items[0].volumeInfo.description) {
        let descText = response.items[0].volumeInfo.description.slice(0, 200);
        cardText.innerHTML = `<p style="font-size:1rem; font-family:'Handlee">${descText} ....</p>`
      } else if (response.items[0].searchInfo) {
        let descText = response.items[0].searchInfo.textSnippet.slice(0, 200);
        cardText.innerHTML = `<p style="font-size:1rem; font-family:'Handlee">${descText} ....</p>`
      } else {
        cardText.innerHTML = `<p style="font-size:1rem; font-family:'Pacifico">The Genre of this book is ${book.pages.bold()} and it was recommended by : ${book.read.bold()}.</p>`;
      }
      if (response.items[0].volumeInfo.imageLinks) {
        url = response.items[0].volumeInfo.imageLinks.thumbnail;
        image.setAttribute("src", url);
      }
      cardText.appendChild(image);
      if (response.items[0].volumeInfo.infoLink) {
        info = response.items[0].volumeInfo.infoLink;
        ref.setAttribute("href", info);
      }
      cardText.appendChild(ref);
    }
  );

  body.appendChild(cardTitle);
  body.appendChild(cardSub);

  body.appendChild(cardText);
  card.appendChild(body);
  carousel.appendChild(card);

  document.getElementById(book.pages).appendChild(carousel);
  myLibrary.push(book);
}

// submit form handling
function submitForm(e) {
  e.preventDefault();
  var card = new newcard(
    getInputval("name"),
    getInputval("author"),
    getInputval("pages"),
    getInputval("formCheck-1")
  );

  $.get(
    `https://www.googleapis.com/books/v1/volumes?q=${card.title}+inauthor:${card.author}`,
    function (response) {
      if (
        !response.items ||
        !response.items[0].volumeInfo.title
        .toLowerCase()
        .includes(card.title.toLowerCase()) ||
        !response.items[0].volumeInfo.authors
        .join()
        .toLowerCase()
        .includes(card.author.toLowerCase())
      ) {
        alert = document.querySelector(".alert");
        alert.style.display = "block";
        setTimeout(() => {
          alert.classList.toggle("anime");
        }, 1000);
        setTimeout(() => {
          alert.classList.toggle("anime");
        }, 4000);
        setTimeout(() => {
          alert.style.display = "none";
        }, 5100);
      } else {
        saveBook(card);
      }
    }
  );

  document.querySelector("#bookForm").reset();
}

// sends data to firebase database
function saveBook(book) {
  var newBook = books.push();
  newBook.set(book);
}

// Utility Function
function getInputval(id) {
  return document.getElementById(id).value;
}

$(".carousel").on("slid.bs.carousel", (e) => {
  $(".carousel").carousel("pause");
});



// ------------------------------------------